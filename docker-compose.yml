version: "3.8"
services:
  code-server:
    container_name: code_server_container
    build: ./code-server
    ports:
      - "${CODE_SERVER_PORT}:8080"
      - "${VITE_PORT}:5173"
      - "${UVICORN_PORT}:8000"
    env_file:
      - ./.env
    volumes:
      - ./code-server/workspace:/home/code-server-user/workspace
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    networks:
      - dokploy-network
  pgadmin:
    container_name: pgadmin_container
    build: ./database/pgadmin
 
    env_file:
      - ./.env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_LISTEN_PORT}:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - dokploy-network

  postgres_exporter:
    container_name: exporter_container
    build: ./monitoring/postgres_exporter
    env_file:
      - ./.env
    environment:
      - DATA_SOURCE_NAMES=${DATA_SOURCE_NAMES}
    volumes:
      - ./monitoring/postgres_exporter/configs/queries.yaml:/etc/postgres_exporter/queries.yaml:ro
    ports:
      - "${POSTGRES_EXPORTER_PORT}:9187"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 500M
    networks:
      - dokploy-network

  loki:
    container_name: loki_container
    build: ./monitoring/loki
    ports:
      - "${LOKI_PORT}:3100"
    env_file:
      - ./.env
    volumes:
      - loki-data:/loki
      - ./monitoring/loki/configs/local-config.yaml:/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - dokploy-network

  promtail:
    container_name: promtail_container
    build: ./monitoring/promtail
    ports:
      - "${PROMTAIL_PORT}:9080"

    env_file:
      - ./.env
    volumes:
      - /var/log:/var/log
      - ./monitoring/promtail/configs/config.yml:/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - dokploy-network

  grafana:
    container_name: grafana_container
    build: ./monitoring/grafana
    ports:
      - "${GF_SERVER_HTTP_PORT}:3000"
    env_file:
      - ./.env
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/configs:/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - dokploy-network

volumes:
  pgadmin-data:
  loki-data:
  grafana-data:

networks:
  dokploy-network:
    external: true